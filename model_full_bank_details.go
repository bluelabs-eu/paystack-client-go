/*
Paystack

The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.

API version: 1.0.0
Contact: techsupport@paystack.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FullBankDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullBankDetails{}

// FullBankDetails struct for FullBankDetails
type FullBankDetails struct {
	Id *int64 `json:"id,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Country *string `json:"country,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Longcode *string `json:"longcode,omitempty"`
	SupportsTransfer *bool `json:"supports_transfer,omitempty"`
	AvailableForDirectDebit *bool `json:"available_for_direct_debit,omitempty"`
	PayWithBank *bool `json:"pay_with_bank,omitempty"`
	Active *bool `json:"active,omitempty"`
	IsDeleted *bool `json:"is_deleted,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewFullBankDetails instantiates a new FullBankDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullBankDetails() *FullBankDetails {
	this := FullBankDetails{}
	return &this
}

// NewFullBankDetailsWithDefaults instantiates a new FullBankDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullBankDetailsWithDefaults() *FullBankDetails {
	this := FullBankDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FullBankDetails) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FullBankDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FullBankDetails) SetId(v int64) {
	o.Id = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *FullBankDetails) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *FullBankDetails) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *FullBankDetails) SetSlug(v string) {
	o.Slug = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FullBankDetails) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FullBankDetails) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FullBankDetails) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FullBankDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FullBankDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FullBankDetails) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FullBankDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FullBankDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FullBankDetails) SetType(v string) {
	o.Type = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *FullBankDetails) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *FullBankDetails) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *FullBankDetails) SetCountry(v string) {
	o.Country = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *FullBankDetails) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *FullBankDetails) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *FullBankDetails) SetCurrency(v string) {
	o.Currency = &v
}

// GetLongcode returns the Longcode field value if set, zero value otherwise.
func (o *FullBankDetails) GetLongcode() string {
	if o == nil || IsNil(o.Longcode) {
		var ret string
		return ret
	}
	return *o.Longcode
}

// GetLongcodeOk returns a tuple with the Longcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetLongcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Longcode) {
		return nil, false
	}
	return o.Longcode, true
}

// HasLongcode returns a boolean if a field has been set.
func (o *FullBankDetails) HasLongcode() bool {
	if o != nil && !IsNil(o.Longcode) {
		return true
	}

	return false
}

// SetLongcode gets a reference to the given string and assigns it to the Longcode field.
func (o *FullBankDetails) SetLongcode(v string) {
	o.Longcode = &v
}

// GetSupportsTransfer returns the SupportsTransfer field value if set, zero value otherwise.
func (o *FullBankDetails) GetSupportsTransfer() bool {
	if o == nil || IsNil(o.SupportsTransfer) {
		var ret bool
		return ret
	}
	return *o.SupportsTransfer
}

// GetSupportsTransferOk returns a tuple with the SupportsTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetSupportsTransferOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsTransfer) {
		return nil, false
	}
	return o.SupportsTransfer, true
}

// HasSupportsTransfer returns a boolean if a field has been set.
func (o *FullBankDetails) HasSupportsTransfer() bool {
	if o != nil && !IsNil(o.SupportsTransfer) {
		return true
	}

	return false
}

// SetSupportsTransfer gets a reference to the given bool and assigns it to the SupportsTransfer field.
func (o *FullBankDetails) SetSupportsTransfer(v bool) {
	o.SupportsTransfer = &v
}

// GetAvailableForDirectDebit returns the AvailableForDirectDebit field value if set, zero value otherwise.
func (o *FullBankDetails) GetAvailableForDirectDebit() bool {
	if o == nil || IsNil(o.AvailableForDirectDebit) {
		var ret bool
		return ret
	}
	return *o.AvailableForDirectDebit
}

// GetAvailableForDirectDebitOk returns a tuple with the AvailableForDirectDebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetAvailableForDirectDebitOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailableForDirectDebit) {
		return nil, false
	}
	return o.AvailableForDirectDebit, true
}

// HasAvailableForDirectDebit returns a boolean if a field has been set.
func (o *FullBankDetails) HasAvailableForDirectDebit() bool {
	if o != nil && !IsNil(o.AvailableForDirectDebit) {
		return true
	}

	return false
}

// SetAvailableForDirectDebit gets a reference to the given bool and assigns it to the AvailableForDirectDebit field.
func (o *FullBankDetails) SetAvailableForDirectDebit(v bool) {
	o.AvailableForDirectDebit = &v
}

// GetPayWithBank returns the PayWithBank field value if set, zero value otherwise.
func (o *FullBankDetails) GetPayWithBank() bool {
	if o == nil || IsNil(o.PayWithBank) {
		var ret bool
		return ret
	}
	return *o.PayWithBank
}

// GetPayWithBankOk returns a tuple with the PayWithBank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetPayWithBankOk() (*bool, bool) {
	if o == nil || IsNil(o.PayWithBank) {
		return nil, false
	}
	return o.PayWithBank, true
}

// HasPayWithBank returns a boolean if a field has been set.
func (o *FullBankDetails) HasPayWithBank() bool {
	if o != nil && !IsNil(o.PayWithBank) {
		return true
	}

	return false
}

// SetPayWithBank gets a reference to the given bool and assigns it to the PayWithBank field.
func (o *FullBankDetails) SetPayWithBank(v bool) {
	o.PayWithBank = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *FullBankDetails) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *FullBankDetails) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *FullBankDetails) SetActive(v bool) {
	o.Active = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *FullBankDetails) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *FullBankDetails) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *FullBankDetails) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FullBankDetails) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FullBankDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FullBankDetails) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FullBankDetails) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullBankDetails) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FullBankDetails) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FullBankDetails) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o FullBankDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullBankDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Longcode) {
		toSerialize["longcode"] = o.Longcode
	}
	if !IsNil(o.SupportsTransfer) {
		toSerialize["supports_transfer"] = o.SupportsTransfer
	}
	if !IsNil(o.AvailableForDirectDebit) {
		toSerialize["available_for_direct_debit"] = o.AvailableForDirectDebit
	}
	if !IsNil(o.PayWithBank) {
		toSerialize["pay_with_bank"] = o.PayWithBank
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFullBankDetails struct {
	value *FullBankDetails
	isSet bool
}

func (v NullableFullBankDetails) Get() *FullBankDetails {
	return v.value
}

func (v *NullableFullBankDetails) Set(val *FullBankDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableFullBankDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableFullBankDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullBankDetails(val *FullBankDetails) *NullableFullBankDetails {
	return &NullableFullBankDetails{value: val, isSet: true}
}

func (v NullableFullBankDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullBankDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


